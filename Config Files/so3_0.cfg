############################################################################
##################### SmartOrbiter v3 - Print Head 0 #######################
############################################################################

#config file version v2.0.0
#release date: 08.05.2025

[mcu so3_0]
serial: /dev/serial/by-id/



#################################################################################################################
################################ CHANGE HERE MACRO CONFIGURABLES ################################################
#################################################################################################################

[gcode_macro _SENSOR_VARIABLES_0]         # change here macro configurables, enable disable functions!*************************
variable_filament_load_temp     :220    # temperature to heat up hotend for filament loading, default is 235
variable_filament_unload_temp   :185    # temperature to heat up hotend for filament un-loading, default is 185
variable_filament_load_min_temp :190    # minimum hotend set temperature allowed in filament load macro, default is 190
variable_nozzle_purge_length    :100    # filament extrude amount during load sequenc, hotend purge from old filament, default is 100
variable_nozzle_purge_speed     :300    # filament extrude speed in mm/min adjust this value lower if flow is too high and extruder skips during loading, default is 300
variable_disable_autoload       :False  # disable filament autoload feature by setting this variable True
variable_disable_runnout        :False  # disable runnout by setting this variable True
variable_disable_autounload     :False  # disable auto unload filament by setting this variable to True
variable_enable_beep            :False   # uses M300 sound feature, set it True to enable
variable_SENSOR_RGB_LED         :False  # enable and configure RGB LED pin and type for filament status indication
variable_park_position_x        :100    # edit your X parking position here for pause macro trigerred by runnout
variable_park_position_y        :10     # edit your Y parking position here for pause macro trigerred by runnout
variable_park_lift_z            :10     # edit your Z lift amount for parking position here, default is 10
variable_park_retraction        :1      # edit your retraction amount for parking, default is 1
gcode:


##################################################################
########################## EXTRUDER ##############################
##################################################################
[extruder]
step_pin: so3_0:PB7
dir_pin: so3_0:PB6
enable_pin: !so3_0:PB4
microsteps: 32
full_steps_per_rotation: 200
#rotation_distance = <full_steps_per_rotation> * <microsteps> / <steps_per_mm>
rotation_distance: 4.69
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 2500
max_extrude_only_velocity: 120
max_extrude_only_accel: 3000
heater_pin: so3_0:PA0
sensor_type: ATC Semitec 104NT-4-R025H42G  
sensor_pin: so3_0:PA2
pullup_resistor: 4700
min_temp: 0
max_temp: 300
pressure_advance: 0.03
pressure_advance_smooth_time: 0.02
min_extrude_temp: 165
smooth_time: 0.5
max_extrude_cross_section:10
max_power: 0.995
pwm_cycle_time: 0.01
control = pid
#Default SO3 PID Values:
pid_Kp=24.859 
pid_Ki=2.072 
pid_Kd=74.578
#REVO SO3 PID Values:
#pid_Kp=23.445
#pid_Ki=1.839
#pid_Kd=74.733
[tmc2209 extruder] 
uart_pin: so3_0:PB5
#uart_address: 3 # comment out this line in case UART address definition is not required
interpolate: true
run_current: 0.80
sense_resistor: 0.11
stealthchop_threshold: 0

[heater_fan Hotend0_Fan]
pin: !so3_0:PA8
tachometer_pin: so3_0:PA3
tachometer_ppr: 2
tachometer_poll_interval: 0.0005
heater: extruder
cycle_time: 0.0001 #10KHz PWM frecvency
#cycle_time: 0.01 #100Hz PWM frecvency
heater_temp: 75
fan_speed: 0.65
hardware_pwm: false
shutdown_speed: 0.0
max_power: 1.0


#################################################################################################################################
####################################### DO NOT CHANGE ANYTHING BELOW THIS LINE!!! ###############################################
#################################################################################################################################
####################################### UNLESS YOU KNOW WHAT YOU ARE DOING OR YOU ARE BORED AND NEED TO DO SOMETHING OR YOU ARE ALONE AND NEED SOMETHING TO MESS UP YOUR LIFE OR YOU CAN DO IT BETTER THAN ME OR YOU ARE A REAL SMARTASS OR JUST BECAUSE YOU CAN OR YOU RUN OUT OF BEAR OR HAS NOTHING BETTER TO DO OR ANY UNREASONABLE REASON
#################################################################################################################################

[respond]
default_type: echo

[force_move]
enable_force_move: True

#################################################################################################################################
########################################### so3_0 Features Configuration ##########################################################
#################################################################################################################################

[neopixel SO3RGB_0]
pin: so3_0:PB8
chain_count: 1
color_order: GRB
initial_RED: 0.5
initial_GREEN: 0.5
initial_BLUE: 0.5

[thermistor so3_0Thermistor]
temperature1: 25
resistance1: 100000
beta: 3950

[temperature_sensor so3_0]
sensor_type: so3_0Thermistor
sensor_pin: so3_0:PB1
pullup_resistor: 4700
min_temp: 0
max_temp: 85

[output_pin HOT_LED]
pin: so3_0:PA9
value: 1
shutdown_value: 0

[lis2dw]
cs_pin: so3_0:PA4
spi_bus: spi1
axes_map: y, z, x

[resonance_tester]
accel_chip: lis2dw
probe_points: 150,150,30  # edit XYZ head position for testing
min_freq: 10
max_freq: 200

#################################################################################################################################
############################################## Runout and autoload macros #######################################################
#################################################################################################################################

#################################################################################################################################
####################################### DO NOT CHANGE ANYTHING BELOW THIS LINE!!! ###############################################
#################################################################################################################################
####################################### UNLESS YOU KNOW WHAT YOU ARE DOING OR YOU ARE BORED AND NEED TO DO SOMETHING OR YOU ARE ALONE AND NEED SOMETHING TO MESS UP YOUR LIFE OR YOU CAN DO IT BETTER THAN ME OR YOU ARE A REAL SMARTASS OR JUST BECAUSE YOU CAN OR YOU RUN OUT OF BEAR OR HAS NOTHING BETTER TO DO OR ANY UNREASONABLE REASON
#################################################################################################################################


#*****************************initial RGB LED set at printer start****************************************************************
[delayed_gcode startup_RGB_SET_0]
initial_duration: 2
gcode:    
  {% if printer["filament_switch_sensor SO3Sensor_0"].filament_detected==true %}
      SET_LED LED=SO3RGB_0 RED=0.0 GREEN=1.0 BLUE=0.0
  {% else %}
      SET_LED LED=SO3RGB_0 RED=1.0 GREEN=0.0 BLUE=0.0
  {% endif %}   


#***********************************filament swicth definition***********************************************************

[filament_switch_sensor SO3Sensor_0]
switch_pin: so3_0:PA13
pause_on_runout: False # do not change to true, printer is paused in the next sections
runout_gcode: UPDATE_DELAYED_GCODE ID=runnout_filter_0 DURATION=0.5 # duration defines the filter time for runnout detection
insert_gcode: _filament_load_init_0
event_delay: 1.0
pause_delay: 0.1


#////////////////////////////////////////Filament Unload macros/////////////////////////////////////////////////

[gcode_button _filament_unload_0]
pin: !so3_0:PA10
release_gcode:  # filament unload procedure   
  SET_LED LED=SO3RGB_0 RED=0.0 GREEN=0.5 BLUE=0.5
  _filament_unload_init_0
press_gcode: # do not add any macro call here

[delayed_gcode runnout_filter_0]
gcode: #checking if filament runout is still present after defined delay time, default 0.5s
  {% if printer["filament_switch_sensor SO3Sensor_0"].filament_detected==false %}
      _runnout_init_0
  {% else %}
      M118 Runnout sensor_0 intermitent contact detected!
  {% endif %} 


[gcode_macro _runnout_init_0]
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_VARIABLES_0'] %} 
  SET_LED LED=SO3RGB_0 RED=1.0 GREEN=0.0 BLUE=0.0
  {% if (printer.print_stats.state == "printing") %}      
    {% if(sensor.disable_runnout|lower == 'false') %}
      _filament_change_state10
    {% else %}
    M118 Filament runnout for Sensor0 is disabled in the sensor config file!   
    {% endif %}     
  {% endif %} 
  UPDATE_DELAYED_GCODE ID=clear_loadbusy_0 DURATION=2
  UPDATE_DELAYED_GCODE ID=clear_unloadbusy_0 DURATION=2    
  SET_GCODE_VARIABLE MACRO=_filament_unload_0 VARIABLE=filamentpresent VALUE=0

[gcode_macro _filament_change_state10]
variable_changebusy_0: 0
variable_temp_target: 0
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_VARIABLES_0'] %}  
  {% if changebusy_0 == 0 %}
    PAUSE # call printer pause macro      
    SET_GCODE_VARIABLE MACRO=_filament_change_state10 VARIABLE=changebusy_0 VALUE=1       
    M118 Filament runnout on Extruder 0!
    M118 Load new filament!         
 {% else %}
  {% endif %}

#############################################END filament auto load macro section END***********************************************************

[gcode_macro _filament_load_init_0]
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_VARIABLES_0'] %}  
  SET_LED LED=SO3RGB_0 RED=0.0 GREEN=1.0 BLUE=0.0
  {% if (printer.print_stats.state != "printing") %}
    {% if(sensor.disable_autoload|lower == 'false') %}
      _filament_load_0
    {% else %}
    M118 Filament auto-load for Extruder_0 is disabled in the sensor config file!   
    {% endif %} 
  {% else %}    
    M118 Printing! Can not load filament right now!    
  {% endif %} 
  SET_GCODE_VARIABLE MACRO=_filament_unload_0 VARIABLE=filamentpresent VALUE=1
  UPDATE_DELAYED_GCODE ID=clear_changebusy_0 DURATION=2  


[gcode_macro _filament_load_0]
variable_loadbusy_0: 0
variable_user_temp: 0
gcode:  
    T0
    SET_LED LED=SO3RGB_0 RED=0.7 GREEN=0.5 BLUE=0.0
    {% set sensor = printer['gcode_macro _SENSOR_VARIABLES_0'] %}
    {% if loadbusy_0 == 0 %} # requires [virtual_sdcard] 
      SET_GCODE_VARIABLE MACRO=_filament_load_0 VARIABLE=loadbusy_0 VALUE=1
      SET_GCODE_VARIABLE MACRO=_filament_unload_0 VARIABLE=unloadbusy_0 VALUE=1       
      {% if (sensor.enable_beep|lower == 'true') %} 
        M300 # beep sound
      {% endif %}
      M118 Filament loading!  
      M82           #set extruder to absolute mode
      G92 E0
      G4 P1500        # wait for 1.5 seconds
      FORCE_MOVE STEPPER=extruder DISTANCE=15 VELOCITY=10 ACCEL=1000  # load filament inside the gears force move needs to be enabled      
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={user_temp} # wait for reaching set temperature    
      G1 E{sensor.nozzle_purge_length} F{sensor.nozzle_purge_speed} # extrude preconfigured purge length
      M400  # wait to complete nozzle purge
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={user_temp} # restore user temp if it was set before loading
      M118 Filament load complete! 
      SET_LED LED=SO3RGB_0 RED=0.0 GREEN=1.0 BLUE=0.0
      UPDATE_DELAYED_GCODE ID=clear_unloadbusy_0 DURATION=2   
      UPDATE_DELAYED_GCODE ID=clear_loadbusy_0 DURATION=2  
      M118 Clear filament spaghetti and press resume to continue printing.
    {% else %}
      M118 Filament already loaded!    
    {% endif %}  
#############################################END filament suto load macro section END***********************************************************

#############################################filament auto unload macro section*****************************************************************
[gcode_macro _filament_unload_procedure_0]
gcode:
    G92 E0
    G0 E-9 F3600 # retract fast 9mm
    G4 P2000 # Wait 2 sec for filament cooling
    G0 E9 F3000 # extruder 9mm to crush filament end
    G0 E-5 F3000 #extract filament to cold end fast
    G0 E-10 F300 #extract filament to cold end slow
    G4 P5000 # Wait 5 sec for filament cooling
    G0 E-25 F3000 	#extract filament completely  


[gcode_macro _filament_unload_init_0]
gcode:
  {% set sensor = printer['gcode_macro _SENSOR_VARIABLES_0'] %}
  {% if (printer.print_stats.state != "printing") %}
    {% if(sensor.disable_autounload|lower == 'false') %}
      _filament_unload_0
    {% else %}
      M118 Filament auto-unload for Extruder_0 is disabled in the sensor config file!   
    {% endif %} 
  {% else %}   
     M118 Printing! Can not unload filament right now!
  {% endif %}

[gcode_macro _filament_unload_0] 
variable_unloadbusy_0: 0
variable_filamentpresent: 0
gcode:
	T0
    {% set sensor = printer['gcode_macro _SENSOR_VARIABLES_0'] %}
    {% if unloadbusy_0 == 0 %} # requires [virtual_sdcard]  
      SET_GCODE_VARIABLE MACRO=_filament_unload_0 VARIABLE=unloadbusy_0 VALUE=1
      SET_GCODE_VARIABLE MACRO=_filament_load_0 VARIABLE=loadbusy_0 VALUE=1
      {% if (sensor.enable_beep|lower == 'true') %} 
        M300 # beep sound
      {% endif %}
      M118 Filament_0 unloading!    
      M83
      G92 E0       
      {% if ((printer.extruder.can_extrude|lower != 'true') or (printer.extruder.target == 0))%} # checing for minimum extrusion temperature
        # check if temperature is over the minimum extrusion temp. min_extrude_temp must be defined in the extruder config (to about 185)
        M118 Hotend heating!          
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={sensor.filament_unload_temp} # restore user temp if it was set before loading
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={sensor.filament_unload_temp} # wait for reaching configured unload temperature
      {% endif %}  
      _filament_unload_procedure_0 # call macro of filamnet unload procedure     
      M400 # wait to complete unload
      M118 Filament unload complete!   
      UPDATE_DELAYED_GCODE ID=clear_unloadbusy_0 DURATION=2   
      UPDATE_DELAYED_GCODE ID=clear_loadbusy_0 DURATION=2        
      UPDATE_DELAYED_GCODE ID=unload_RGB_update_0 DURATION=2    
      SET_LED LED=SO3RGB_0 RED=0.0 GREEN=0.0 BLUE=1.0
    {% else %}      
      M118 Nothing to unload!
    {% endif %}

#############################################END filament auto unload macro section END***********************************************************

[delayed_gcode unload_RGB_update_0]
gcode: # change RGB led to RED after filament is phisicaly removed after unload
  {% if printer["filament_switch_sensor SO3Sensor_0"].filament_detected==true %}
      UPDATE_DELAYED_GCODE ID=unload_RGB_update_0 DURATION=2       
  {% else %}
      SET_LED LED=SO3RGB_0 RED=1.0 GREEN=0.0 BLUE=0.0
  {% endif %} 


[delayed_gcode clear_unloadbusy_0]
gcode:
  SET_GCODE_VARIABLE MACRO=_filament_unload_0 VARIABLE=unloadbusy_0 VALUE=0
  #M118 Clear Unload busy! 

[delayed_gcode clear_changebusy_0]
gcode:
  SET_GCODE_VARIABLE MACRO=_filament_change_state10 VARIABLE=changebusy_0 VALUE=0
  #M118 Clear Load busy!  

[delayed_gcode set_loadbusy_0]
gcode:
  SET_GCODE_VARIABLE MACRO=_filament_load_0 VARIABLE=loadbusy_0 VALUE=1
  #M118 Set Load busy! 

[delayed_gcode clear_loadbusy_0]
gcode:
  SET_GCODE_VARIABLE MACRO=_filament_load_0 VARIABLE=loadbusy_0 VALUE=0
  #M118 Clear Load busy!  


